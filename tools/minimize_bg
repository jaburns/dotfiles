#!/usr/bin/env python3
import subprocess
import re

def get_win_dims(win_id):
    info = subprocess.check_output("xwininfo -id "+win_id, shell=True).decode('utf-8').strip().split('\n')
    win = []
    for i in range(6):
        win.append(int(re.sub(r'.*:', '', info[2+i])))
    return [ win[0] - win[2], win[1] - win[3], win[4], win[5] ]

def minimize_window(win_id):
    subprocess.check_output('xdotool windowminimize ' + win_id, shell=True)

def get_active_win_id():
    proc_output = subprocess.check_output("xprop -root _NET_ACTIVE_WINDOW", shell=True).decode('utf-8').strip()
    return re.sub(r',.*', '', re.sub(r'.*#', '', proc_output))

def win_intersects(a, b):
    l0 = a[0]
    r0 = a[0] + a[2]
    t0 = a[1]
    b0 = a[1] + a[3]
    l1 = b[0]
    r1 = b[0] + b[2]
    t1 = b[1]
    b1 = b[1] + b[3]
    if r0 < l1 or r1 < l0: return False
    if b0 < t1 or b1 < t0: return False
    return True

win_id = get_active_win_id()
all_windows = subprocess.check_output("wmctrl -lx | grep -v xfce4-panel | grep -v xfdesktop | cut -f1 -d' '", shell=True).decode('utf-8').strip().split('\n')
cdims = get_win_dims(win_id)
for w in all_windows:
    if int(w,16) == int(win_id,16):
        continue
    wdims = get_win_dims(w)
    if win_intersects(cdims, wdims):
        minimize_window(w)
